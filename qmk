#!/usr/bin/env python3


import argparse
import os
import subprocess
import sys

import visualizer


_COMMANDS = {
    "build": "compile",
    "push": "flash",
}

_KEYBOARDS = {
    "corne": "crkbd/rev1",
    "cornelius": "foostan/cornelius",
    "kyria": "splitkb/kyria/rev1",
}


def abs_path(*paths):
    dirname = os.path.abspath(os.path.dirname(__file__))
    return os.path.join(dirname, *paths)


def qmk(cmd, keyboard):
    subprocess.check_call(["qmk", cmd, "-kb", keyboard])


def show(keyboard, render):
    render(abs_path("users/mnye"), abs_path("keyboards", keyboard, "keymaps/mnye"))


def main():
    parser = argparse.ArgumentParser(description="Build util for QMK")
    parser.add_argument("command")
    parser.add_argument("keyboard")
    args = parser.parse_args()

    command = _COMMANDS.get(args.command, args.command)
    keyboard = _KEYBOARDS.get(args.keyboard, args.keyboard)

    try:
        if command == "show":
            show(keyboard, visualizer.render_ascii)
        elif command == "svg":
            show(keyboard, visualizer.render_svg)
        else:
            qmk(command, keyboard)
    except subprocess.CalledProcessError:
        return 1
    except KeyboardInterrupt:
        print()
        print("Aborting.")
        return 1


if __name__ == "__main__":
    sys.exit(main())
